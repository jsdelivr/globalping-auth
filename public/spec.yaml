openapi: 3.1.0
info:
  title: Globalping Auth API
  summary: The public Globalping Auth API.
  version: 1.0.0
  termsOfService: https://github.com/jsdelivr/globalping
  contact:
    url: https://github.com/jsdelivr/globalping/issues
    email: d@globalping.io
  license:
    name: Open Software License 3.0
    identifier: OSL-3.0
servers:
  - url: https://auth.globalping.io
tags:
  - name: OAuth 2.0
paths:
  /oauth/authorize:
    get:
      summary: Authorization
      description: |
        This endpoint initiates the OAuth 2.0 authorization flow. It is used to obtain an authorization code.
        This is a standard OAuth 2.0 authorization endpoint supporting the `authorization_code` grant type.
      parameters:
        - in: query
          name: client_id
          required: true
          schema:
            type: string
          description: The client ID of the OAuth 2.0 application.
        - in: query
          name: redirect_uri
          required: true
          schema:
            type: string
          description: The URL to which the authorization server will redirect the user after authorization.
        - in: query
          name: response_type
          required: true
          schema:
            type: string
            enum: [code]
          example: code
          description: Specifies that an authorization code should be returned.
        - in: query
          name: scope
          required: true
          schema:
            type: string
            enum:
              - measurements
          example: measurements
          description: The scope of the access request.
        - in: query
          name: code_challenge
          required: true
          schema:
            type: string
          description: Code challenge for Proof Key for Code Exchange (PKCE).
        - in: query
          name: code_challenge_method
          required: true
          example: S256
          schema:
            type: string
            enum: [S256]
          description: The method used to encode the code challenge.
        - in: query
          name: state
          required: false
          schema:
            type: string
          description: A random string used to maintain state between the request and callback. This parameter is optional as using PKCE is preferred.
      responses:
        '302':
          description: Redirects the user for approval, or redirects back to the client application with an authorization code.
        '400':
          description: Bad request due to missing or invalid parameters.
      tags:
        - OAuth 2.0

  /oauth/token:
    post:
      summary: Token
      description: |
        The token endpoint is used by the client to exchange an authorization code or a refresh token for a new access + refresh token pair.
        Note that refresh tokens are valid for a single use and a new refresh token will be provided on every successful `refresh_token` grant call.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - client_id
                - grant_type
                - redirect_uri
              properties:
                client_id:
                  type: string
                  description: The client ID of the OAuth 2.0 application.
                client_secret:
                  type: string
                  description: The client secret of the OAuth 2.0 application (required if the client has one).
                grant_type:
                  type: string
                  enum: [authorization_code, refresh_token]
                  description: The grant type (authorization code or refresh token).
                code:
                  type: string
                  description: The authorization code obtained from the authorization endpoint (required for `authorization_code` grant type).
                refresh_token:
                  type: string
                  description: The refresh token (required for `refresh_token` grant type).
                redirect_uri:
                  type: string
                  description: The redirect URI registered by the client.
                code_verifier:
                  type: string
                  description: The code verifier for PKCE (required for `authorization_code` grant type).
      responses:
        '200':
          description: Returns an access token and a refresh token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The OAuth 2.0 access token.
                  refresh_token:
                    type: string
                    description: The refresh token.
                  expires_in:
                    type: integer
                    description: The lifetime of the access token in seconds.
                  token_type:
                    type: string
                    enum: [Bearer]
                    description: The type of token issued.
                  scope:
                    type: string
                    description: The scope associated with the access token.
        '400':
          description: Invalid request, such as a missing parameter or invalid authorization code.
        '401':
          description: Invalid client credentials.
      tags:
        - OAuth 2.0

  /oauth/token/introspect:
    post:
      summary: Token Introspection
      description: |
        The introspection endpoint allows clients to query the active state of an access or refresh token.
        It returns information about the token such as its scope, client ID, and username.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: The token to be introspected (either an access token or a refresh token).
      responses:
        '200':
          description: Returns the active state and metadata of the token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  active:
                    type: boolean
                    description: Whether the token is currently active.
                  scope:
                    type: string
                    description: The scope of the token.
                  client_id:
                    type: string
                    description: The client ID associated with the token.
                  username:
                    type: string
                    description: The username associated with the token (if applicable).
                  token_type:
                    type: string
                    description: The type of the token (e.g., Bearer).
        '400':
          description: Invalid request, such as a missing or malformed token.
      tags:
        - OAuth 2.0

  /oauth/token/revoke:
    post:
      summary: Token Revocation
      description: |
        The revocation endpoint allows clients to revoke access tokens or refresh tokens.
        Revoking a refresh token will also revoke the associated access token.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: The token to be revoked (either an access token or a refresh token).
      responses:
        '200':
          description: Token successfully revoked.
        '400':
          description: Invalid request, such as a missing or malformed token.
      tags:
        - OAuth 2.0
